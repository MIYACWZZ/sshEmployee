<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 引入外部文件 -->
    <context:property-placeholder location="classpath:jdbc.properties" />
    <!-- 配置c3p0连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- 配置hibernate的相关属性 -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!-- 注入连接池 -->
        <property name="dataSource" ref="dataSource" />
        <!-- 配置Hibernate的属性 -->
        <property name="hibernateProperties">
                <props>
                    <!--
报错：create table department (
       did integer not null auto_increment,
        dname varchar(20),
        ddesc varchar(100),
        primary key (did)
    ) type=MyISAM
2017-09-19 22:54:59 [??????] com.mchange.v2.c3p0.impl.NewPooledConnection@75e69bf4 handling a throwable.
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax;
check the manual that corresponds to your MySQL server version for the right syntax to use near
'type=MyISAM' at line 6

解决： type已经是Mysql5.1版本以下用的了，现在更新换代了，使用Hibernate5之后Mysql的方言改为了org.hibernate.dialect.MySQL5Dialect
修改之后：create table department (
            did integer not null auto_increment,
            dname varchar(20),
            ddesc varchar(100),
            primary key (did)
        ) engine=MyISAM

                    -->
                    <prop key="hibernate.dialect" >org.hibernate.dialect.MySQL5Dialect</prop>
                    <prop key="hibernate.show_sql">true</prop><!--是否显示所生成 SQL 语句，我们最常和它打交道-->
                    <prop key="hibernate.format_sql">true</prop><!--作用是:输出格式化后的sql,更方便查看 -->
                    <prop key="hibernate.hbm2ddl.auto">update</prop><!-- 有表的时候使用当前表，没表的时候自动创建 -->
                </props>
        </property>
        <!-- 加载Hibernate中的映射文件 -->
        <property name="mappingResources">
            <list>
                <value>hbm/Department.hbm.xml</value>
                <value>hbm/Employee.hbm.xml</value>
            </list>
        </property>
    </bean>

<!--Action-->
    <bean id="employeeAction" class="com.zz.employee.action.EmployeeAction" scope="prototype">
        <property name="employeeService" ref="employeeService"/>
    </bean>

    <bean id="departmentAction" class="com.zz.employee.action.DepartmentAction" scope="prototype">
        <property name="departmentService" ref="departmentService"/>
    </bean>
<!--Service-->
    <bean id="employeeService" class="com.zz.employee.service.impl.EmployeeServiceImpl" >
        <property name="employeeDao" ref="employeeDao"/>
    </bean>

    <bean id="departmentService" class="com.zz.employee.service.impl.DepartmentServiceImpl" >
        <property name="departmentDao" ref="departmentDao"/>
    </bean>
<!--Dao-->
    <bean id="employeeDao" class="com.zz.employee.dao.impl.EmployeeDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean id="departmentDao" class="com.zz.employee.dao.impl.DepartmentDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- 开启注解事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>